{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/player.js","webpack:///./src/background.js","webpack:///./src/enemy.js","webpack:///./src/level.js","webpack:///./src/menu.js","webpack:///./src/score_tracker.js","webpack:///./src/game.js","webpack:///./src/divekicker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CONSTANTS","SPINFRAMES","Player","ctx","this","playerSprite","Image","src","spinSprite","x","y","velocity","sideVelocity","divekicking","jumping","currentSpinFrame","spinning","spinDelay","invincible","jumpCount","onload","draw","top","right","left","bottom","getBounds","spinTimer","clearInterval","jumpAnimationTimer","setInterval","invincibleTimer","bounceAnimationTimer","spinDelayTimer","Math","abs","drawImage","length","updateSpinFrame","currentFrame","clearRect","drawJump","drawDivekick","drawSpin","drawBase","move","Background","scrollSpeed","backgroundImg","Enemy","moveDir","position","enemySprite","startingPosition","positiveMove","hit","change","drawHit","MAX_ENEMIES","SCROLL_SPEED","OFFSCREEN_ENEMY","Level","height","width","currentEnemyIdx","difficulty","enemies","createEnemy","num","floor","random","player","enemy","scoreTracker","playerBounds","enemyBounds","bounce","enemyKill","collision","forEach","collisionCheck","randomizeEnemySpawn","animate","enemyNum","push","shift","animateEnemies","scrollEnemies","Menu","game","menu","document","getElementById","controlsMenu","startButton","controlsButton","closeButton","initializeMenuButtons","openMenu","closeMenu","id","className","start","addEventListener","startGame","ScoreTracker","score","scoreMultiplyer","that","scoreIncreaseTimer","enemyHit","font","lineWidth","fillStyle","fillText","Game","canvas","backgroundCtx","gameStatus","background","level","initializeControls","rightPressed","leftPressed","finalScoreMessage","restartMessage","window","e","defaultPrevented","code","jump","diveKick","moveRight","moveLeft","spin","playerCollision","hitBottom","difficultyIncreaseTimer","resetScore","showRestartMessage","finalScore","innerHTML","gameOver","reset","requestAnimationFrame","hideRestartMessage","initializeScore","getContext","initializeGame"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","const CONSTANTS = {\r\n    GRAVITY: 0.35,\r\n    TERMINAL_VELOCITY: 20,\r\n    JUMP_SPEED: 8,\r\n    BOUNCE_SPEED: 10,\r\n    MOVE_SPEED: 7,\r\n    DIVEKICK_SPEED: 20,\r\n    SPRITE_HEIGHT: 80,\r\n    SPRITE_WIDTH: 64\r\n};\r\n\r\nconst SPINFRAMES = [0, 64, 128, 196];\r\n\r\nclass Player {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.playerSprite = new Image();\r\n        this.playerSprite.src = './src/assets/divekicker_2-5-jump.png';\r\n        this.spinSprite = new Image();\r\n        this.spinSprite.src = './src/assets/spin_frames.png';\r\n        this.x = 0;\r\n        this.y = 500 / 4;\r\n        this.velocity = 0;\r\n        this.sideVelocity = 0;\r\n        this.divekicking = false;\r\n        this.jumping = false;\r\n        this.currentSpinFrame = -1;\r\n        this.spinning = false;\r\n        this.spinDelay = false;\r\n        this.invincible = false;\r\n        this.jumpCount = 2;\r\n\r\n        this.playerSprite.onload = () => this.draw(ctx);\r\n\r\n        this.draw = this.draw.bind(this);\r\n    }\r\n\r\n    getBounds() {\r\n        return {\r\n            top: this.y,\r\n            right: this.x + (CONSTANTS.SPRITE_WIDTH / 2),\r\n            left: this.x,\r\n            bottom: this.y + (CONSTANTS.SPRITE_HEIGHT / 2)\r\n        }\r\n    }\r\n\r\n    hitBottom() {\r\n        const bounds = this.getBounds();\r\n        if (bounds.bottom > 600) return true;\r\n        return false;\r\n    }\r\n\r\n    jump() {\r\n        if (this.jumpCount) {\r\n            if (this.spinTimer) clearInterval(this.spinTimer);\r\n            this.spinning = false;\r\n            this.spinDelay = false;\r\n            this.divekicking = false;\r\n            this.jumping = true;\r\n            this.velocity = -1 * CONSTANTS.JUMP_SPEED;\r\n            this.jumpCount--;\r\n            const jumpAnimationTimer = setInterval(() => {\r\n                this.jumping = false;\r\n                clearInterval(jumpAnimationTimer);\r\n            }, 1500);\r\n        }\r\n        \r\n    }\r\n\r\n    diveKick() {\r\n        if (this.spinTimer) clearInterval(this.spinTimer);\r\n        this.spinning = false;\r\n        this.spinDelay = false;\r\n        this.velocity = CONSTANTS.DIVEKICK_SPEED;\r\n        this.jumping = false;\r\n        this.divekicking = true;\r\n    }\r\n\r\n    bounce() {\r\n        this.invincible = true;\r\n        this.divekicking = false;\r\n        this.jumping = true;\r\n        this.jumpCount = 2;\r\n        this.y -= CONSTANTS.BOUNCE_SPEED * 2;\r\n        this.velocity = -1 * CONSTANTS.BOUNCE_SPEED;\r\n\r\n        const invincibleTimer = setInterval(() => {\r\n            this.invincible = false;\r\n            clearInterval(invincibleTimer);\r\n        }, 100);\r\n\r\n        const bounceAnimationTimer = setInterval(() => {\r\n            this.jumping = false;\r\n            clearInterval(bounceAnimationTimer);\r\n        }, 1000);\r\n    }\r\n\r\n    spin() {\r\n        if (!this.spinning && !this.spinDelay) {\r\n            this.spinning = true;\r\n            this.spinDelay = true;\r\n\r\n            this.spinTimer = setInterval(() => {\r\n                this.spinning = false;\r\n                clearInterval(this.spinTimer);\r\n            }, 800);\r\n\r\n            const spinDelayTimer = setInterval(() => {\r\n                this.spinDelay = false;\r\n                clearInterval(spinDelayTimer);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    moveRight() {\r\n        this.sideVelocity = CONSTANTS.MOVE_SPEED;\r\n    }\r\n\r\n    moveLeft() {\r\n        this.sideVelocity = -CONSTANTS.MOVE_SPEED;\r\n    }\r\n\r\n    move() {\r\n        this.x += this.sideVelocity;\r\n        this.y += this.velocity;\r\n        this.velocity += CONSTANTS.GRAVITY;\r\n        if (Math.abs(this.velocity) >= CONSTANTS.TERMINAL_VELOCITY) {\r\n            this.velocity = this.velocity > 0 ? CONSTANTS.TERMINAL_VELOCITY : CONSTANTS.TERMINAL_VELOCITY * -1;\r\n        }\r\n    }\r\n\r\n    drawBase(ctx) {\r\n        ctx.drawImage(this.playerSprite, 0, 0, 64, 80, this.x, this.y, 64, 80);\r\n    }\r\n\r\n    drawJump(ctx) {\r\n        ctx.drawImage(this.playerSprite, 0, 80, 64, 80, this.x, this.y, 64, 80);\r\n    }\r\n\r\n    drawDivekick(ctx) {\r\n        ctx.drawImage(this.playerSprite, 0, 160, 64, 80, this.x, this.y, 64, 80);\r\n    }\r\n\r\n    updateSpinFrame() {\r\n        this.currentSpinFrame = (this.currentSpinFrame + 1) % SPINFRAMES.length;\r\n    }\r\n\r\n    drawSpin(ctx) {\r\n        this.updateSpinFrame();\r\n        const currentFrame = SPINFRAMES[this.currentSpinFrame];\r\n        ctx.drawImage(this.spinSprite, 0, currentFrame, 64, 64, this.x, this.y, 64, 64);\r\n        // ctx.drawImage(this.spinSprite, 0, 64, 64, 64, this.x, this.y, 64, 64);\r\n        // ctx.drawImage(this.spinSprite, 0, 128, 64, 64, this.x, this.y, 64, 64);\r\n        // ctx.drawImage(this.spinSprite, 0, 196, 64, 64, this.x, this.y, 64, 64);\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.clearRect(0, 0, 1000, 500);\r\n        if (this.jumping && !this.spinning) {\r\n            this.drawJump(ctx);\r\n        } else if (this.divekicking) {\r\n            this.drawDivekick(ctx);\r\n        } else if (this.spinning) {\r\n            this.drawSpin(ctx);\r\n        } else {\r\n            this.drawBase(ctx)\r\n        }\r\n    }\r\n\r\n    animate(ctx) {\r\n        this.move();\r\n        this.draw(ctx);\r\n    }\r\n}\r\n\r\nexport default Player;","class Background {\r\n    constructor(ctx, scrollSpeed) {\r\n        this.ctx = ctx;\r\n        this.scrollSpeed = scrollSpeed;\r\n        this.backgroundImg = new Image();\r\n        this.backgroundImg.src = './src/assets/background.png';\r\n        this.x = 0;\r\n    }\r\n\r\n    animate() {\r\n        this.ctx.clearRect(0, 0, 1000, 500);\r\n        this.x -= this.scrollSpeed;\r\n        this.ctx.drawImage(this.backgroundImg, this.x, 0); \r\n        this.ctx.drawImage(this.backgroundImg, this.x + 1600, 0);\r\n        if (this.x === -1600) this.x = 0; \r\n    }\r\n}\r\n\r\nexport default Background;","const CONSTANTS = {\r\n    MOVE_SPEED: 2,\r\n    SPRITE_HEIGHT: 128,\r\n    SPRITE_WIDTH: 128\r\n};\r\n\r\nclass Enemy {\r\n    constructor(moveDir, position) {\r\n        this.enemySprite = new Image();\r\n        this.enemySprite.src = './src/assets/divekicker_enemy_128.png';\r\n        this.moveDir = moveDir;\r\n        this.startingPosition = position;\r\n        this.positiveMove = true;\r\n        this.x = position.x;\r\n        this.y = position.y;\r\n        this.hit = false;\r\n\r\n        this.draw = this.draw.bind(this);\r\n    }\r\n\r\n    getBounds() {\r\n        return {\r\n            top: this.y,\r\n            right: this.x + (CONSTANTS.SPRITE_WIDTH / 2),\r\n            left: this.x,\r\n            bottom: this.y + (CONSTANTS.SPRITE_HEIGHT / 2)\r\n        }\r\n    }\r\n\r\n    move() {\r\n        // if (this.y <= (this.startingPosition.y - CONSTANTS.SPRITE_HEIGHT)) this.positiveMove = false;\r\n        // if (this.y >= (this.startingPosition.y + CONSTANTS.SPRITE_HEIGHT)) this.positiveMove = true;\r\n        // if (this.moveDir === 'vertical') {\r\n        if (this.y <= (this.startingPosition.y - (CONSTANTS.SPRITE_HEIGHT / 2))) this.positiveMove = false;\r\n        if (this.y >= (this.startingPosition.y + (CONSTANTS.SPRITE_HEIGHT / 2))) this.positiveMove = true;\r\n\r\n        const change = this.positiveMove ? CONSTANTS.MOVE_SPEED : -CONSTANTS.MOVE_SPEED;\r\n        this.y -= change;\r\n        // } else {\r\n        //     if (this.x <= (this.startingPosition.x - CONSTANTS.SPRITE_WIDTH)) this.positiveMove = true;\r\n        //     if (this.x >= (this.startingPosition.x + CONSTANTS.SPRITE_WIDTH)) this.positiveMove = false;\r\n\r\n        //     const change = this.positiveMove ? CONSTANTS.MOVE_SPEED : -CONSTANTS.MOVE_SPEED;\r\n        //     this.x += change;\r\n        // }\r\n    }\r\n\r\n    drawBase(ctx) {\r\n        ctx.drawImage(this.enemySprite, 0, 0, 128, 128, this.x, this.y, 128, 128);\r\n    }\r\n\r\n    drawHit(ctx) {\r\n        ctx.drawImage(this.enemySprite, 0, 128, 128, 128, this.x, this.y, 128, 128);\r\n    }\r\n\r\n    draw(ctx) {\r\n        this.hit ? this.drawHit(ctx) : this.drawBase(ctx);\r\n    }\r\n\r\n    animate(ctx) {\r\n        this.move();\r\n        this.draw(ctx);\r\n    }\r\n}\r\n\r\nexport default Enemy;","import Enemy from './enemy';\r\n\r\nconst CONSTANTS = {\r\n    MAX_ENEMIES: 8,\r\n    SCROLL_SPEED: 5,\r\n    OFFSCREEN_ENEMY: [5, 6, 7, 8]\r\n}\r\n\r\nclass Level {\r\n    constructor() {\r\n        this.height = 500;\r\n        this.width = 1000;\r\n        this.currentEnemyIdx = 0;\r\n        this.difficulty = 0;\r\n        this.enemies = [\r\n            this.createEnemy(3),\r\n            this.createEnemy(3),\r\n            this.createEnemy(3),\r\n            this.createEnemy(4),\r\n            this.createEnemy(4),\r\n            this.createEnemy(5),\r\n            this.createEnemy(5)\r\n        ];\r\n    }\r\n\r\n    randomizeEnemySpawn(num) {\r\n        switch(num) {\r\n            case 1:\r\n                return {\r\n                    x: Math.floor(Math.random() * 250),\r\n                    y: Math.floor(Math.random() * 400) + 100 \r\n                }\r\n            case 2:\r\n                return {\r\n                    x: Math.floor(Math.random() * 250) + 250,\r\n                    y: Math.floor(Math.random() * 400) + 100 \r\n                }\r\n            case 3:\r\n                return {\r\n                    x: Math.floor(Math.random() * 250) + 500,\r\n                    y: Math.floor(Math.random() * 300) + 200 \r\n                }\r\n            case 4:\r\n                return {\r\n                    x: Math.floor(Math.random() * 250) + 750,\r\n                    y: Math.floor(Math.random() * 300) + 100 \r\n                }\r\n            case 5:\r\n                return {\r\n                    x: Math.floor(Math.random() * 1) + 1000,\r\n                    y: Math.floor(Math.random() * 350) + 100 \r\n                }\r\n            case 6:\r\n                return {\r\n                    x: Math.floor(Math.random() * 1) + 1100,\r\n                    y: Math.floor(Math.random() * 350) + 100 \r\n                }\r\n            case 7:\r\n                return {\r\n                    x: Math.floor(Math.random() * 1) + 1200,\r\n                    y: Math.floor(Math.random() * 400)\r\n                }\r\n            case 8:\r\n                return {\r\n                    x: Math.floor(Math.random() * 1) + 1200,\r\n                    y: Math.floor(Math.random() * 200) \r\n                }\r\n            default:\r\n                return {\r\n                    x: Math.floor(Math.random() * 250),\r\n                    y: Math.floor(Math.random() * 500) \r\n                }\r\n        }\r\n    }\r\n\r\n    randomizeMoveDirection() {\r\n        const num = Math.floor(Math.random() * 2);\r\n        const moveDir = num === 0 ? 'horizontal' : 'vertical';\r\n        return moveDir;\r\n    }\r\n\r\n    collisionCheck(player, enemy, scoreTracker) {\r\n        const playerBounds = player.getBounds();\r\n        const enemyBounds = enemy.getBounds();\r\n        if (playerBounds.left > enemyBounds.right || playerBounds.right < enemyBounds.left) return false;\r\n        if (playerBounds.top > enemyBounds.bottom || playerBounds.bottom < enemyBounds.top) return false;\r\n        if (player.divekicking) {\r\n            player.bounce();\r\n            scoreTracker.enemyKill(enemy.hit);\r\n            enemy.hit = true;\r\n        } else if(player.spinning) {\r\n            scoreTracker.enemyKill(enemy.hit);\r\n            enemy.hit = true;\r\n        } else if (!player.invincible) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    playerCollision(player, scoreTracker) {\r\n        let collision = false;\r\n        this.enemies.forEach(enemy => {\r\n            if (this.collisionCheck(player, enemy, scoreTracker)) collision = true;\r\n        });\r\n\r\n        return collision;\r\n    }\r\n\r\n    createEnemy(num) {\r\n        // return new Enemy(this.randomizeMoveDirection(), this.randomizeEnemySpawn(num));\r\n        return new Enemy('vertical', this.randomizeEnemySpawn(num));\r\n    }\r\n\r\n    animateEnemies(ctx) {\r\n        this.enemies.forEach(enemy => enemy.animate(ctx))\r\n    }\r\n\r\n    scrollEnemies() {\r\n        this.enemies.forEach(enemy => {\r\n            enemy.x -= (CONSTANTS.SCROLL_SPEED + this.difficulty)\r\n        });\r\n\r\n        if (this.enemies[0].x <= 200 && this.enemies.length < CONSTANTS.MAX_ENEMIES) {\r\n            const enemyNum = CONSTANTS.OFFSCREEN_ENEMY[this.currentEnemyIdx];\r\n            this.currentEnemyIdx = (this.currentEnemyIdx + 1) % CONSTANTS.OFFSCREEN_ENEMY.length;\r\n            this.enemies.push(this.createEnemy(enemyNum));\r\n        }\r\n\r\n        if (this.enemies[0].x <= -70) {\r\n            this.enemies.shift();\r\n        }\r\n    }\r\n\r\n    animate(ctx) {\r\n        this.animateEnemies(ctx);\r\n        this.scrollEnemies();\r\n    }\r\n}\r\n\r\nexport default Level;","class Menu {\r\n    constructor(game) {\r\n        this.game = game;\r\n        this.menu = document.getElementById('menu');\r\n        this.controlsMenu = document.getElementById('controls-menu');\r\n        this.startButton = document.getElementById('start-btn');\r\n        this.controlsButton = document.getElementById('controls-menu-btn');\r\n        this.closeButton = document.getElementById('close-btn');\r\n        this.initializeMenuButtons();\r\n\r\n        this.openMenu = this.openMenu.bind(this);\r\n        this.closeMenu = this.closeMenu.bind(this);\r\n    }\r\n\r\n    openMenu(id) {\r\n        id === 'menu' ? this.menu.className = 'open' : this.controlsMenu.className = 'open';\r\n    }\r\n\r\n    closeMenu(id) {\r\n        id === 'menu' ? this.menu.className = 'closed' : this.controlsMenu.className = 'closed';\r\n    }\r\n\r\n    startGame() {\r\n        this.closeMenu('menu');\r\n        this.game.start();\r\n    }\r\n\r\n    initializeMenuButtons() {\r\n        this.startButton.addEventListener('click', this.startGame.bind(this));\r\n        this.controlsButton.addEventListener('click', () => this.openMenu('controls'));\r\n        this.closeButton.addEventListener('click', () => this.closeMenu('controls'))\r\n    }\r\n}\r\n\r\nexport default Menu;","const CONSTANTS = {\r\n    SCORE_PER_100_MS: 10,\r\n    ENEMY_KILL: 200\r\n}\r\n\r\nclass ScoreTracker {\r\n    constructor(game) {\r\n        this.score = 0;\r\n        this.scoreMultiplyer = 1.0;\r\n\r\n        this.draw = this.draw.bind(this);\r\n    }\r\n\r\n    initializeScore() {\r\n        const that = this;\r\n        return this.scoreIncreaseTimer = setInterval(() => {\r\n            that.score += (CONSTANTS.SCORE_PER_100_MS * that.scoreMultiplyer);\r\n        }, 100);\r\n    }\r\n\r\n    resetScore() {\r\n        if (this.scoreIncreaseTimer) clearInterval(this.scoreIncreaseTimer);\r\n        this.score = 0;\r\n        this.scoreMultiplyer = 1.0;\r\n    }\r\n\r\n    enemyKill(enemyHit) {\r\n        if (!enemyHit) this.score += (CONSTANTS.ENEMY_KILL * this.scoreMultiplyer);\r\n    }\r\n\r\n    draw(ctx) {\r\n        const score = `SCORE: ${this.score}`;\r\n        ctx.font = 'bold 28px sans-serif';\r\n        ctx.lineWidth = 1;\r\n        ctx.fillStyle = '#ffd24c';\r\n        ctx.fillText(score, 20, 40);\r\n    }\r\n}\r\n\r\nexport default ScoreTracker;","import Player from './player';\r\nimport Background from './background';\r\nimport Level from './level';\r\nimport Menu from './menu';\r\nimport ScoreTracker from './score_tracker';\r\n// import Enemy from './enemy';\r\n\r\nclass Game {\r\n    constructor(canvas, ctx, backgroundCtx) {\r\n        this.canvas = canvas;\r\n        this.ctx = ctx;\r\n        this.gameStatus = false;\r\n        this.player = new Player(ctx);\r\n        this.background = new Background(backgroundCtx, 1.0);\r\n        this.level = new Level();\r\n        this.menu = new Menu(this);\r\n        this.scoreTracker = new ScoreTracker(this);\r\n        this.initializeControls();\r\n\r\n        this.rightPressed = false;\r\n        this.leftPressed = false;\r\n\r\n        this.finalScoreMessage = document.getElementById('final-score');\r\n        this.restartMessage = document.getElementById('restart-msg');\r\n\r\n        this.animate = this.animate.bind(this);\r\n    }\r\n\r\n    initializeControls() {\r\n        window.addEventListener('keydown', e => {\r\n            if (e.defaultPrevented) return;\r\n\r\n            if (this.gameStatus) {\r\n                switch(e.code) {\r\n                    case 'Space':\r\n                        this.player.jump();\r\n                        break;\r\n                    case 'ArrowDown':\r\n                        this.player.diveKick();\r\n                        break;\r\n                    case 'ArrowRight':\r\n                        this.rightPressed = true;\r\n                        this.player.moveRight();\r\n                        break;\r\n                    case 'ArrowLeft':\r\n                        this.leftPressed = true;\r\n                        this.player.moveLeft();\r\n                        break;\r\n                    case 'KeyQ':\r\n                        this.player.spin();\r\n                        break;\r\n                    default:\r\n                        return;\r\n                }\r\n            } else {\r\n                switch(e.code) {\r\n                    case 'KeyR':\r\n                        if (this.menu.menu.className !== 'open') this.start();\r\n                        break;\r\n                    default:\r\n                        return;\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        window.addEventListener('keyup', e => {\r\n            if (e.defaultPrevented) return;\r\n\r\n            switch(e.code) {\r\n                case 'ArrowRight':\r\n                    this.rightPressed = false;\r\n                    if (!this.leftPressed) this.player.sideVelocity = 0;\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.leftPressed = false;\r\n                    if (!this.rightPressed) this.player.sideVelocity = 0;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    initializeGame() {\r\n        this.menu.openMenu('menu');\r\n    }\r\n\r\n    gameOver() {\r\n        return this.level.playerCollision(this.player, this.scoreTracker) || this.player.hitBottom();\r\n    }\r\n\r\n    reset() {\r\n        if (this.difficultyIncreaseTimer) clearInterval(this.difficultyIncreaseTimer);\r\n        this.gameStatus = false;\r\n        this.player = new Player(this.ctx);\r\n        this.level = new Level();\r\n        this.scoreTracker.resetScore();\r\n        this.scoreTracker = new ScoreTracker(this);\r\n        this.showRestartMessage(this.finalScore);\r\n    }\r\n\r\n    showRestartMessage(finalScore) {\r\n        this.finalScoreMessage.innerHTML = `FINAL SCORE: ${finalScore}`;\r\n        this.restartMessage.className = 'show';\r\n    }\r\n\r\n    hideRestartMessage() {\r\n        this.restartMessage.className = 'hide';\r\n    }\r\n\r\n    animate() {\r\n        if (this.gameStatus) {\r\n            this.background.animate()\r\n            this.player.animate(this.ctx);\r\n            this.level.animate(this.ctx);\r\n            this.scoreTracker.draw(this.ctx);\r\n\r\n            if (this.gameOver()) {\r\n                this.finalScore = Math.floor(this.scoreTracker.score);\r\n                this.reset()\r\n            }\r\n\r\n            requestAnimationFrame(this.animate);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.gameStatus = true;\r\n        this.hideRestartMessage();\r\n        this.scoreTracker.initializeScore();\r\n        this.difficultyIncreaseTimer = setInterval(() => {\r\n            if (this.level.difficulty < 10) this.level.difficulty++;\r\n            this.scoreTracker.scoreMultiplyer += 0.5;\r\n        }, 10000);\r\n        this.animate();\r\n    }\r\n}\r\n\r\nexport default Game;","import Game from './game';\r\nimport './styles/reset.scss';\r\nimport \"./styles/divekicker.scss\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const canvas = document.getElementById('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const background = document.getElementById('bg-canvas');\r\n    const backgroundCtx = background.getContext('2d');\r\n\r\n    const newGame = new Game(canvas, ctx, backgroundCtx);\r\n    newGame.initializeGame();\r\n})"],"sourceRoot":""}